import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.net.Socket;
import java.util.Scanner;

public class serverThread extends Thread  {
	
	   Socket clientRequest;// 用户连接的通信套接字  
	    BufferedReader input;// 输入流 
	   
	    PrintWriter output;// 输出流
	  
	    public serverThread(Socket s)  
	    {  
	        this.clientRequest = s;  
	        
	        InputStreamReader reader;   // 接收receiveServer传来的套接字 
	        OutputStreamWriter writer;  //写入socket
	        try  
	        { // 初始化输入、输出流 
	        	InputStream is = clientRequest.getInputStream();
	        	OutputStream os=clientRequest.getOutputStream();
	            reader = new InputStreamReader(is);  
	            writer = new OutputStreamWriter(os);  
	            input = new BufferedReader(reader);  
	            output = new PrintWriter(writer, true);
	            
	          //  Scanner sc = new Scanner(System.in);

	        } catch (IOException e)  
	        {  
	            System.out.println(e.getMessage());  
	        }  
	    
	    }  
	    
	    public void run()  
	    { // 线程的执行方法  
	 
	            try  
	            {  
	            	
	            	System.out.println("新连接:"+clientRequest.getInetAddress()+":"+clientRequest.getPort());
//	                Scanner sc = new Scanner(System.in);
//					String send = sc.next();
//					output.write(send);
	            	
	            		String bufstr=input.readLine();    //读取来自客户端的数据
	            	//hhe output.println("郭锦腾出轨了！");
	            	 if(bufstr==null)
	            	   System.out.println("ssss");
	            	
	            	 System.out.println(bufstr);
	            	 clientRequest.shutdownInput();
	            	 
	                 Thread.sleep(10000);
	             	String str2 = "";
	        		for (int i = bufstr.length() - 1; i > -1; i--) {
	        			str2 += String.valueOf(bufstr.charAt(i));
	        		}
                     output.write(str2);
                     output.flush();
	            	
	            } catch (IOException e)  
	            {  
	                System.out.println(e.getMessage());  
	            } catch (InterruptedException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}  
	     
	  
	        try  
	        {  
	          System.out.println("关闭连接:"+ clientRequest.getInetAddress()+":"+ clientRequest.getPort());
	            clientRequest.close(); // 关闭套接字  
	        } catch (IOException e)  
	        {  
	            System.out.println(e.getMessage());  
	        }  
	       // command = null;  
	    
	        }// end of run  
}
